---
version: '2'
services:
  ksql-server:
    env_file:
      - .env.override/ksqls
    image: confluentinc/cp-ksql-server:5.2.1
    hostname: ksql-server
    container_name: ksql-server
    # depends_on:
    #   - broker1
    #   - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: ${BROKER_LIST}
      KSQL_HOST_NAME: ${KSQL_HOST}
      KSQL_APPLICATION_ID: "heart-watch"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://${SCHEMA_REGISTRY_HOST}:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"

  ksql-cli:
    image: confluentinc/cp-ksql-cli:5.2.1
    container_name: ksql-cli
    depends_on:
      # - broker1
      # - connect
      - ksql-server
    entrypoint: /bin/sh
    tty: true

  ksql-datagen:
    # Downrev ksql-examples to 5.1.2 due to DEVX-798 (work around issues in 5.2.0)
    image: confluentinc/ksql-examples:5.1.2
    hostname: ksql-datagen
    container_name: ksql-datagen
    depends_on:
      - ksql-server
      # - broker1
      # - schema-registry
      # - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b ${BROKER_LEADER}:9092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready ${SCHEMA_REGISTRY_HOST} 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      STREAMS_BOOTSTRAP_SERVERS: ${BROKER_LIST}
      STREAMS_SCHEMA_REGISTRY_HOST: ${SCHEMA_REGISTRY_HOST}
      STREAMS_SCHEMA_REGISTRY_PORT: 8081

---
version: '2'
services:
  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.1
    hostname: schema-registry
    container_name: schema-registry
    # depends_on:
    #   - zookeeper1
    #   - broker1
    ports:
      - "8081:8081"
    environment:
      # SCHEMA_REGISTRY_LISTENERS: http://${SCHEMA_REGISTRY_HOST}:8081
      SCHEMA_REGISTRY_DEBUG: 'true'
      SCHEMA_REGISTRY_HOST_NAME: ${SCHEMA_REGISTRY_HOST}
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: ${BROKER_LEADER}:2181

  connect:
    image: confluentinc/kafka-connect-datagen:latest
    build:
      context: .
      dockerfile: ../docker_volumes/connect/Dockerfile
    volumes:
      - ../docker_volumes/connect/:/code/
      - ${DIR_SCHEMAS}:${DIR_SCHEMAS_MOUNT}
    hostname: connect
    container_name: connect
    # depends_on:
      # - zookeeper1
      # - broker1
      # - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: ${BROKER_LIST}
      # CONNECT_REST_ADVERTISED_HOST_NAME: ${CONNECT_HOST}:8088
      CONNECT_REST_ADVERTISED_HOST_NAME: ${CONNECT_HOST}
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://${SCHEMA_REGISTRY_HOST}:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: ${ZOOKEEPER_LIST}
      # Assumes image is based on confluentinc/kafka-connect-datagen:latest which is pulling 5.1.1 Connect image
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.2.1.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    command: "bash -c 'if [ ! -d /usr/share/confluent-hub-components/confluentinc-kafka-connect-datagen ]; then echo \"WARNING: Did not find directory for kafka-connect-datagen (did you remember to run: docker-compose up -d --build ?)\"; fi ; /etc/confluent/docker/run'"

  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.2.1
    depends_on:
      # - zookeeper1
      # - broker1
      - schema-registry
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: ${BROKER_LIST}
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://${SCHEMA_REGISTRY_HOST}:8081'

  database:
    image: postgres
    volumes:
      - ../docker_volumes/database/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    container_name: database

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.2.1
    hostname: control-center
    container_name: control-center
    depends_on:
      # - zookeeper1
      # - broker1
      - schema-registry
      # - connect
      # - ksql-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: ${BROKER_LIST}
      CONTROL_CENTER_ZOOKEEPER_CONNECT: ${ZOOKEEPER_LIST}
      CONTROL_CENTER_CONNECT_APP_CLUSTER: '${CONNECT_HOST}:8083'
      CONTROL_CENTER_KSQL_APP_URL: ${KSQL_LIST}
      # CONTROL_CENTER_KSQL_ADVERTISED_URL: ${KSQL_LIST}
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://${SCHEMA_REGISTRY_HOST}:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
